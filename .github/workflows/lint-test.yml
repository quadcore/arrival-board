name: Python application

on: pull_request

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      # Check out repository and set up Python
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      # Install and configure Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # Load cached virtual environment if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # Install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      # Activate virtual environment and run linter
      - name: Lint with flake8
        run: |
          source .venv/bin/activate
          flake8 . --show-source --statistics
      # Run tests
      - name: Test with pytest
        run: |
          pytest
